@charset "utf-8";

/*reset start */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

a:link,
a:visited {
  text-decoration: none;
  color: black;
}

ul,
li {
  list-style: none;
}

img {
  display: block;
}
/*reset end */

body {
  background-color: skyblue;
}

/* container */
/* make container FIXED with these vals, DO NOT change container
if you want to change container element then don't directly change
.container, instead add another class name to the specific container
element you want to change e.g. <div class="container someClass">
then you can change that specific container via .container .someClass {} css */
.container {
  /* w1200 tab  width 1200px creates a scroll under 1200px width bc of the container
  so instead if we make .container width 100% it won't create a scroll if we reduce screen size */
  width: 1200px;
  /* width: 100%; */
  /* margin 0 auto to center */
  margin: 0 auto;
}
.layout {
  display: flex;
  justify-content: space-between;
  padding: 8px 16px;
  /* align items center removes the default align items stretch (stretch is like fill container in figma) 
  you can see if you put bg red on gnbmenu how it differes with or without align items center*/
  align-items: center;
}

/* navigation (menu) */
.gnbMenu > ul {
  display: flex;
  flex-direction: row;
  gap: 10px;
}
.gnbMenu a {
  display: block;
  padding: 10px 16px;
  /* background-color: red; */
}
/* hamburger button */
.toggle {
  width: 30px;
  height: 30px;
  background-color: black;
  display: none;
}

.header {
  background: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  position: fixed;
  width: 100%;
}

.footer {
  /* width: 100%; not needed since it's display block by default */
  /* height: 100px; */
  /* using height is not advised to use except for img sliders
  instead of setting height to parent, set size of parent using PADDING
  so that when inner children becomes larger than the parent,
  the parent's size will automatically grow AS BTG AS the inner children.
  The reason we use any padding at all to the parent is bc we have to 
  first make parent APPEAR on screen. unless parent has (BOTH height
  AND width) OR parent has padding (both y and x), parent will not
  appear on screen. ALSO even if parent has both height&width or padding
  set, if parent's POSITION is set to ABSOLUTE, parent will DISAPPEAR
  on screen UPLESS its LEFT/RIGHT/TOP/BOTTOM is SET to some value!! */
  padding: 20px 0px;
  background: white;
}

/*css responsive start*/
/* bootstrap navbar was doing this responsive part automatically */
/* media query has 4 levels, whereas bootstrap has 5 levels of screen size */
@media screen and (max-width: 1199px) {
  body {
    background-color: pink;
  }
}

@media screen and (max-width: 991px) {
  body {
    background-color: grey;
  }
}

/* mobile size. max width 767px */
@media screen and (max-width: 767px) {
  .toggle {
    display: block;
    /* why does it not show without z-index?? */
    z-index: 10;
  }
  .gnbMenu > ul {
    /* display: flex; */
    flex-direction: column;
    /* gap: 10px; */
  }
  .gnbMenu {
    /* background: blue; */
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: -100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .gnbMenu.active {
    left: 0;
  }
  .container {
    /* w100p tab */
    width: 100%;
  }
}
@media screen and (max-width: 575px) {
}
/*css responsive end*/
